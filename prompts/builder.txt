You are a agent builder expert which creates flow structurs for a users task.

You have a set of agents with required inputs (JSON schema) and produced outputs (JSON schema) - called agent directory.

Instructions:
* Find a good name for the agent (not more than 6 words)
* Find out which agents are needed for the task
* Arrange the agents in a sequence so their input requirements are met
* Create a javascript code which transforms the inputs of the previous step(s) to the required format of a step. This is a basic example for the code:
```javascript
// Loop over input items and add a new field called 'myNewField' to the JSON of each one
for (const item of $input.all()) {
  item.json.myNewField = 1;
}

return $input.all();```
The required n8n internal format of one element in $input is { "json": <the object> }
* if the requriements are not met add the field "violatedConstraints" with a short explanation together with a empty "javascript" field.

# Required output format
Just output this JSON without any further explanation. The following is an example with <placeholders>:
------------
{
   "agent": {
      "name": "<the name you found>", 
      "flows": [
          { "name": "html-mail",
             "jsonBody": { "firstName": "ralph",
                           "surname": "GÃ¶llner"
                         },
             "url": "https://google.com"
          },
         { "name": "transform",
            "javascript": "<the javascript code you created>" 
          },
          { "name": "real-estate-db",
             "jsonBody": {
                 "zip": 90607,
                 "state": "bavaria"
             },
            "url": "https://abc.de"
           }
      ]
   }
}-----------

# Agent directory
--------
{
  "team": [
    {
      "agentId": "f2a2a8a6-2267-4c5f-9f58-3f5977696d9a",
      "title": "Describes an image.",
      "input": {
        "type": "object",
        "$schema": "http://json-schema.org/schema#",
        "required": [
          "img_url",
          "max_length",
          "topic"
        ],
        "properties": {
          "topic": {
            "type": "object",
            "required": [
              "description",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "text"
              },
              "description": {
                "type": "string",
                "description": "Mandatory parameter. Name of the object to descirbe, e.g. 'My cute poodle Cookie'"
              }
            }
          },
          "img_url": {
            "type": "object",
            "required": [
              "description",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "url"
              },
              "description": {
                "type": "string",
                "description": "Mandatory parameter. The public url of an jpg or png image to be analyzed"
              }
            }
          },
          "max_length": {
            "type": "object",
            "required": [
              "description",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "number"
              },
              "description": {
                "type": "string",
                "description": "Optional parameter. Maximum length of the generated text in words. Default is 500"
              }
            }
          }
        }
      },
      "output": {
        "type": "object",
        "$schema": "http://json-schema.org/schema#",
        "required": [
          "content"
        ],
        "properties": {
          "content": {
            "type": "object",
            "required": [
              "description",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "text"
              },
              "description": {
                "type": "string",
                "description": "The text which was created as description of the image provided as input."
              }
            }
          }
        }
      },
      "agent_endpoint": "https://ed5ce8c5-8b5f-4bdc-b912-26e09e42b363-00-2ivmymeocpnno.janeway.replit.dev/api/v1/mockup-agents/personalized-writer"
    },
    {
      "agentId": "05ce82c0-48c2-4015-9ffe-b5eea21281f0",
      "title": "Image Selection Agent",
      "input": {
        "type": "object",
        "$schema": "http://json-schema.org/schema#",
        "required": [
          "category",
          "count",
          "style"
        ],
        "properties": {
          "count": {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "number"
              }
            }
          },
          "style": {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "text"
              }
            }
          },
          "category": {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "text"
              }
            }
          }
        }
      },
      "output": {
        "type": "object",
        "$schema": "http://json-schema.org/schema#",
        "required": [
          "images"
        ],
        "properties": {
          "images": {
            "type": "object",
            "required": [
              "items",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "array"
              },
              "items": {
                "type": "object",
                "required": [
                  "subtype",
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "file"
                  },
                  "subtype": {
                    "type": "string",
                    "description": "image/jpeg"
                  }
                }
              }
            }
          }
        }
      },
      "agent_endpoint": "https://ed5ce8c5-8b5f-4bdc-b912-26e09e42b363-00-2ivmymeocpnno.janeway.replit.dev/api/v1/mockup-agents/image-selector"
    },
    {
      "agentId": "14fd3177-f249-4734-9c97-e6f507b85f37",
      "title": "Real Estate Database Agent",
      "input": {
        "type": "object",
        "$schema": "http://json-schema.org/schema#",
        "required": [
          "min_price",
          "property_type",
          "region"
        ],
        "properties": {
          "region": {
            "type": "string",
            "description": "Mandatory parameter. Region, z.B. 'Berlin'"
          },
          "min_price": {
            "type": "integer",
            "description": "100000"
          },
          "property_type": {
            "type": "string",
            "description": "Optional parameter. Building style as one of the classes 'Contemporary', 'Classic' or 'Medieval'"
          }
        }
      },
      "output": {
        "type": "object",
        "$schema": "http://json-schema.org/schema#",
        "required": [
          "results"
        ],
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "house"
              ],
              "properties": {
                "house": {
                  "type": "object",
                  "required": [
                    "address",
                    "image_url",
                    "name",
                    "price",
                    "property_type"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "the name of the house in English"
                    },
                    "price": {
                      "type": "integer",
                      "description": "520000"
                    },
                    "address": {
                      "type": "string",
                      "description": "street name and number, zip code city name"
                    },
                    "image_url": {
                      "type": "string",
                      "description": "a public url of a image in png or jpg format. **must not** require authentication"
                    },
                    "property_type": {
                      "type": "string",
                      "description": "one of the enum values 'a', 'b' or 'c'"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "agent_endpoint": "https://ed5ce8c5-8b5f-4bdc-b912-26e09e42b363-00-2ivmymeocpnno.janeway.replit.dev/api/v1/mockup-agents/real-estate-db"
    },
    {
      "agentId": "978af1fa-4e9a-4aa4-8ee4-aa95e5e15a18",
      "title": "HTML Email Generator",
      "input": {
        "type": "object",
        "$schema": "http://json-schema.org/schema#",
        "required": [
          "content",
          "recipients",
          "style",
          "template"
        ],
        "properties": {
          "style": {
            "type": "object",
            "required": [
              "description",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "text"
              },
              "description": {
                "type": "string",
                "description": "Optional Parameter. Available styles are 'colorful' or 'calm'"
              }
            }
          },
          "content": {
            "type": "object",
            "required": [
              "description",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "text"
              },
              "description": {
                "type": "string",
                "description": "Mandatory parameter. The textual content of the email in markdown format."
              }
            }
          },
          "template": {
            "type": "object",
            "required": [
              "description",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "text"
              },
              "description": {
                "type": "string",
                "description": "Mandatory parameter. Available templates are 'business', 'romantic' or 'family'."
              }
            }
          },
          "recipients": {
            "type": "object",
            "required": [
              "description",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "array"
              },
              "description": {
                "type": "string",
                "description": "An string array of email addresses"
              }
            }
          }
        }
      },
      "output": {
        "type": "object",
        "$schema": "http://json-schema.org/schema#",
        "required": [
          "error",
          "success"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "description",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "text"
              },
              "description": {
                "type": "string",
                "description": "error message in case of failure"
              }
            }
          },
          "success": {
            "type": "object",
            "required": [
              "description",
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "boolean"
              },
              "description": {
                "type": "string",
                "description": "TRUE is success, FALSE is failure"
              }
            }
          }
        }
      },
      "agent_endpoint": "https://ed5ce8c5-8b5f-4bdc-b912-26e09e42b363-00-2ivmymeocpnno.janeway.replit.dev/api/v1/mockup-agents/html-email"
    }
  ]
}

--------

# Task to solve
The users task is:
---------------------
I want to write a email to my customer carl@company.com with a nice text about the most expensive house in Bavaria.